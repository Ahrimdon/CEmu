name: Build macOS

on:
  push:
    branches: [ master, feature/github-actions ]
  pull_request:
    branches: [ master, feature/github-actions ]
  release:
    types: [published]

jobs:
  build:
    name: "Build: ${{ matrix.os }}"
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macOS-latest]

    steps:
    - name: Checkout Git Repo
      uses: actions/checkout@v3
      with:
        submodules: 'recursive'

    - name: Install dependencies
      run: |
        set -e
        brew install libarchive libpng zlib

    - name: Install Qt
      uses: jurplel/install-qt-action@43ec12788e42f375acfcb2cec059edfb9572fbaa # v3
      with:
          target: desktop
          setup-python: false
          cache: true

    # Workaround!
    # libarchive.pc now has (lib)iconv in Requires.private, which doesn't work here
    # See https://github.com/libarchive/libarchive/pull/1813 and other issues
    - name: Fix libarchive pkg-config file
      run: |
        sudo sed -i '' -E '/^Requires.private: (lib)?iconv/d' /usr/local/opt/libarchive/lib/pkgconfig/libarchive.pc

    - name: Build CEmu Qt on macOS
      run: |
        set -e
        export PKG_CONFIG_PATH="/usr/local/opt/libarchive/lib/pkgconfig:$PKG_CONFIG_PATH"
        cd gui/qt/capture ; /bin/bash ./get_libpng-apng.sh ; cd ../../../
        mkdir build
        cd build
        qmake ../gui/qt && make -j4
        macdeployqt CEmu.app
        mkdir -p /tmp/CEmu-nightly_mac_qt5/
        mv CEmu.app /tmp/CEmu-nightly_mac_qt5/

    - name: "Codesign CEmu.app"
      env:
          HAVE_SECRETS: ${{ secrets.MACOS_CERTIFICATE_PWD != '' }}
          MACOS_CERTIFICATE: ${{ secrets.MACOS_CERTIFICATE }}
          MACOS_CERTIFICATE_PWD: ${{ secrets.MACOS_CERTIFICATE_PWD }}
          MACOS_KEYCHAIN_PWD: ${{ secrets.MACOS_KEYCHAIN_PWD }}
          MACOS_CODESIGN_IDENT: ${{ secrets.MACOS_CODESIGN_IDENT }}
      if: ${{ runner.os == 'macOS' && github.repository == 'CE-Programming/CEmu' && env.HAVE_SECRETS == 'true' }}
      run: |
          echo $MACOS_CERTIFICATE | base64 -d > certificate.p12
          security create-keychain -p $MACOS_KEYCHAIN_PWD build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p $MACOS_KEYCHAIN_PWD build.keychain
          security import certificate.p12 -k build.keychain -P $MACOS_CERTIFICATE_PWD -T /usr/bin/codesign
          security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k $MACOS_KEYCHAIN_PWD build.keychain
          /usr/bin/codesign --deep --force --verify --verbose --sign "$MACOS_CODESIGN_IDENT" --timestamp --options runtime /tmp/CEmu-nightly_mac_qt5/CEmu.app

    - name: "Create the DMG"
      run: |
          brew install create-dmg || brew install create-dmg; # we try twice because sometimes it fails...
          # The codesign variable may be empty (for forks) but that's fine, create-dmg only does code-signing if it's not empty.
          createDmgArgs="--codesign '${{ secrets.MACOS_CODESIGN_IDENT }}' \
              --volname 'CEmu-nightly Qt5' \
              --window-pos 200 120 \
              --window-size 600 400 \
              --icon-size 64 \
              --icon 'CEmu.app' 125 200 \
              --app-drop-link 400 200 \
              'CEmu-nightly_mac_qt5.dmg' \
              '/tmp/CEmu-nightly_mac_qt5/'"
          eval "create-dmg $createDmgArgs" || eval "create-dmg $createDmgArgs" # We also retry just in case...

    - name: "Notarize DMG"
      env:
        HAVE_SECRETS: ${{ secrets.APPLE_NOTARIZATION_PASSWORD != '' }}
      if: ${{ runner.os == 'macOS' && github.repository == 'CE-Programming/CEmu' && env.HAVE_SECRETS == 'true' }}
      uses: adriweb/xcode-notarize-please@77452e14fadc0b5629870193e273c99623a1b320 # v1.2
      with:
          product-path: CEmu-nightly_mac_qt5.dmg
          appstore-connect-username: ${{ secrets.APPLE_NOTARIZATION_USERNAME }}
          appstore-connect-password: ${{ secrets.APPLE_NOTARIZATION_PASSWORD }}
          primary-bundle-id: 'com.adriweb.CEmu'

    - name: "Staple DMG"
      env:
        HAVE_SECRETS: ${{ secrets.APPLE_NOTARIZATION_PASSWORD != '' }}
      if: ${{ runner.os == 'macOS' && github.repository == 'CE-Programming/CEmu' && env.HAVE_SECRETS == 'true' }}
      uses: adriweb/xcode-staple@2114e06658d8492882b252406aaa7fee3e75ed85 # v1.0.0
      with:
          product-path: CEmu-nightly_mac_qt5.dmg

    - name: Upload dmg as artifact
      uses: actions/upload-artifact@v3
      with:
          name: CEmu-nightly_mac_qt5
          path: CEmu-nightly_mac_qt5.dmg

    - name: Update nightly release
      uses: pyTooling/Actions/releaser@cc576ce25a588e4fd623f3a4ea528f397141e931 # v0.4.5
      with:
        tag: nightly
        rm: false
        token: ${{secrets.GITHUB_TOKEN}}
        files: |
          CEmu-nightly_mac_qt5.dmg
